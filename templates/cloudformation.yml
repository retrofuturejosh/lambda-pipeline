AWSTemplateFormatVersion: 2010-09-09
Parameters:
  GitHubToken:
    NoEcho: true
    Type: String
    Description: Github Token generated from
  GitHubRepoOwner:
    Type: String
    Description: Owner of the GitHub Repository
  GitHubRepoName:
    Type: String
    Description: Name of the GitHub Repository
  GitHubBranch:
    Type: String
    Description: Name of branch to use inside the GitHub Repository
    Default: master
  S3Bucket:
    Type: String
    Description: S3 Bucket where artifacts will be stored
Resources:
  S3BuildBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties:
      BucketName: !Ref S3Bucket

  # CloudFormationServiceRole:
  #     Type: "AWS::IAM::Role"
  #     Properties:
  #       RoleName: "cfLambdaPipelineServiceRole"
  #       AssumeRolePolicyDocument:
  #         Version: "2012-10-17"
  #         Statement:
  #           -
  #             Effect: "Allow"
  #             Principal:
  #               Service:
  #                 - "cloudformation.amazonaws.com"
  #             Action:
  #               - "sts:AssumeRole"
  #       Policies:
  #         -
  #           PolicyName: "cfLambdaPipelinePolicy"
  #           PolicyDocument:
  #             Version: "2012-10-17"
  #             Statement:
  #             - Action:
  #               - s3:GetObject
  #               - s3:GetObjectVersion
  #               - s3:GetBucketVersioning
  #               Resource: "*"
  #               Effect: Allow
  #             - Action:
  #               - s3:PutObject
  #               Resource:
  #               - arn:aws:s3:::codepipeline*
  #               Effect: Allow
  #             - Action:
  #               - lambda:*
  #               Resource:
  #               - arn:aws:lambda:region:id:function:*
  #               Effect: Allow
  #             - Action:
  #               - apigateway:*
  #               Resource:
  #               - arn:aws:apigateway:region::*
  #               Effect: Allow
  #             - Action:
  #               - iam:GetRole
  #               - iam:CreateRole
  #               - iam:DeleteRole
  #               - iam:PutRolePolicy
  #               Resource:
  #               - arn:aws:iam::id:role/*
  #               Effect: Allow
  #             - Action:
  #               - iam:AttachRolePolicy
  #               - iam:DeleteRolePolicy
  #               - iam:DetachRolePolicy
  #               Resource:
  #               - arn:aws:iam::id:role/*
  #               Effect: Allow
  #             - Action:
  #               - iam:PassRole
  #               Resource:
  #               - "*"
  #               Effect: Allow
  #             - Action:
  #               - cloudformation:CreateChangeSet
  #               Resource:
  #               - arn:aws:cloudformation:region:aws:transform/Serverless-2016-10-31
  #               Effect: Allow
  #             - Action:
  #               - codedeploy:CreateApplication
  #               - codedeploy:DeleteApplication
  #               - codedeploy:RegisterApplicationRevision
  #               Resource:
  #               - arn:aws:codedeploy:region:id:application:*
  #               Effect: Allow
  #             - Action:
  #               - codedeploy:CreateDeploymentGroup
  #               - codedeploy:CreateDeployment
  #               - codedeploy:GetDeployment
  #               Resource:
  #               - arn:aws:codedeploy:region:id:deploymentgroup:*
  #               Effect: Allow
  #             - Action:
  #               - codedeploy:GetDeploymentConfig
  #               Resource:
  #               - arn:aws:codedeploy:region:id:deploymentconfig:*
  #               Effect: Allow

  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: Allow
              Principal:
                Service:
                  - "codepipeline.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Path: "/"
        Policies:
          -
            PolicyName: NodeCodePipelinePolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                -
                  Effect: Allow
                  Action:
                    - "s3:GetObject"
                    - "s3:GetObjectVersion"
                    - "s3:GetBucketVersioning"
                  Resource: "*"
                -
                  Effect: Allow
                  Action:
                    - "s3:PutObject"
                  Resource:
                    - "arn:aws:s3:::codepipeline*"
                -
                  Effect: Allow
                  Action:
                    - "codedeploy:CreateDeployment"
                    - "codedeploy:GetApplicationRevision"
                    - "codedeploy:GetDeployment"
                    - "codedeploy:GetDeploymentConfig"
                    - "codedeploy:RegisterApplicationRevision"
                  Resource: "*"
                -
                  Effect: Allow
                  Action:
                    - "elasticbeanstalk:*"
                    - "ec2:*"
                    - "elasticloadbalancing:*"
                    - "autoscaling:*"
                    - "cloudwatch:*"
                    - "s3:*"
                    - "sns:*"
                    - "cloudformation:*"
                    - "rds:*"
                    - "sqs:*"
                    - "ecs:*"
                    - "iam:PassRole"
                  Resource: "*"
                -
                  Effect: Allow
                  Action:
                    - "lambda:InvokeFunction"
                    - "lambda:ListFunctions"
                  Resource: "*"
                -
                  Effect: Allow
                  Action:
                    - "codebuild:BatchGetBuilds"
                    - "codebuild:StartBuild"
                  Resource: "*"

  CodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        -
          PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - "arn:aws:logs:*:*:log-group:/aws/codebuild/*"
              -
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:PutObject"
                Resource: "arn:aws:s3:::*"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join [ '-' , [ !Ref GitHubRepoName, !Ref GitHubBranch ] ]
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Name: !Join [ '-' , [ !Ref GitHubRepoName, !Ref GitHubBranch ] ]
        Type: CODEPIPELINE
        Packaging: NONE
      Environment:
        Type: LINUX_CONTAINER
        # ComputeType options: BUILD_GENERAL1_SMALL, BUILD_GENERAL1_MEDIUM, BUILD_GENERAL1_LARGE
        ComputeType: BUILD_GENERAL1_SMALL
        # Run `aws codebuild list-curated-environment-images` for a complete list of images provided.
        Image: aws/codebuild/nodejs:10.1.0
      Source:
        Type: CODEPIPELINE
      TimeoutInMinutes: 10


  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Join [ '-' , [ !Ref GitHubRepoName, !Ref GitHubBranch ] ]
      RoleArn: !GetAtt CodePipelineRole.Arn
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                -
                  Name: SourceCodeOutputArtifact
              Configuration:
                Owner: !Ref GitHubRepoOwner
                Repo: !Ref GitHubRepoName
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
        -
          Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: SourceCodeOutputArtifact
              OutputArtifacts:
                - Name: BuildOutputArtifact
              Configuration:
                ProjectName: !Ref CodeBuildProject
              RunOrder: 1
        -
          Name: Deploy
          Actions:
            -
              Name: DeployAction
              InputArtifacts:
              -
                Name: BuildOutputArtifact
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                StackName: Serverless-Change-Set
              RunOrder: 1

      ArtifactStore:
        Type: S3
        Location: !Ref S3BuildBucket
